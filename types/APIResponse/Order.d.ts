import { IAddress } from './Address';
import { IOrderInPayment } from './OrderInPayment';
import { IOrderItem } from './OrderItem';
import { IOrderShipmentItem } from './OrderShipmentItem';
import { IProperties } from './Properties';

export interface IOrder extends IDefaultObj {
  rowVersion: string;
  customerId: string;
  customerName: string;
  channelId?: string;
  storeId: string;
  storeName?: string;
  organizationId?: string;
  organizationName?: string;
  employeeId?: string;
  employeeName?: string;
  shoppingCartId: string;
  isPrototype: boolean;
  purchaseOrderNumber?: string;
  subscriptionNumber?: string;
  subscriptionId?: string;
  objectType: string;
  discountAmount: number;
  scopes?: string;
  total: number;
  subTotal: number;
  subTotalWithTax: number;
  subTotalDiscount: number;
  subTotalDiscountWithTax: number;
  subTotalTaxTotal: number;
  shippingTotal: number;
  shippingTotalWithTax: number;
  shippingSubTotal: number;
  shippingSubTotalWithTax: number;
  shippingDiscountTotal: number;
  shippingDiscountTotalWithTax: number;
  shippingTaxTotal: number;
  paymentTotal: number;
  paymentTotalWithTax: number;
  paymentSubTotal: number;
  paymentSubTotalWithTax: number;
  paymentDiscountTotal: number;
  paymentDiscountTotalWithTax: number;
  paymentTaxTotal: number;
  discountTotal: number;
  discountTotalWithTax: number;
  fee: number;
  feeWithTax: number;
  feeTotal: number;
  feeTotalWithTax: number;
  handlingTotal: number;
  handlingTotalWithTax: number;
  taxType?: string;
  taxTotal: number;
  taxPercentRate: number;
  languageCode: string;
  operationType: string;
  parentOperationId?: string;
  number: string;
  isApproved: boolean;
  status: string;
  comment?: string;
  currency: string;
  sum: number;
  outerId?: string;
  cancelledState: string;
  isCancelled: boolean;
  cancelledDate?: Date;
  cancelReason?: string;
  operationsLog?: string;
  addresses: Array<IAddress>;
  inPayments: Array<IOrderInPayment>;
  items: Array<IOrderItem>;
  shipments: Array<IOrderShipmentItem>;
  feeDetails: Array<any>;
  discounts: Array<any>;
  taxDetails: Array<any>;
  childrenOperations: Array<IOrderInPayment>;
  dynamicProperties?: Array<IProperties>;
}
export interface IOrdersList extends Array<IOrder> {}
