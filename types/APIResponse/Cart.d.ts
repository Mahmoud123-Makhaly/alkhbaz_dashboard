import { IAddress } from './Address';
import { ICartItem } from './CartItem';
import { IOrderInPayment } from './OrderInPayment';
import { IOrderShipmentItem } from './OrderShipmentItem';
import { IProperties } from './Properties';

export interface ICart extends IDefaultObj {
  name: string;
  storeId: string;
  channelId?: string;
  isAnonymous: boolean;
  customerId?: string;
  customerName?: string;
  organizationId?: string;
  currency: string;
  languageCode: string;
  taxIncluded?: string;
  isRecuring: boolean;
  comment?: string;
  status?: string;
  purchaseOrderNumber?: string;
  weightUnit?: string;
  weight?: number;
  validationType?: string;
  type?: string;
  volumetricWeight?: string;
  total: number;
  subTotal: number;
  subTotalWithTax: number;
  subTotalDiscount: number;
  subTotalDiscountWithTax: number;
  shippingTotal: number;
  shippingTotalWithTax: number;
  shippingSubTotal: number;
  shippingSubTotalWithTax: number;
  shippingDiscountTotal: number;
  shippingDiscountTotalWithTax: number;
  paymentTotal: number;
  paymentTotalWithTax: number;
  paymentSubTotal: number;
  paymentSubTotalWithTax: number;
  paymentDiscountTotal: number;
  paymentDiscountTotalWithTax: number;
  handlingTotal: number;
  handlingTotalWithTax: number;
  discountAmount: number;
  discountAmountWithTax: number;
  discountTotal: number;
  discountTotalWithTax: number;
  fee: number;
  feeWithTax: number;
  feeTotal: number;
  feeTotalWithTax: number;
  addresses: Array<IAddress>;
  items: Array<ICartItem>;
  payments: Array<IOrderInPayment>;
  shipments: Array<IOrderShipmentItem>;
  coupons: Array<any>;
  coupon?: string;
  discounts: Array<any>;
  taxType?: string;
  taxTotal: number;
  taxPercentRate: number;
  taxDetails: Array<any>;
  objectType: string;
  dynamicProperties: Array<IProperties>;
}
export interface ICartList extends Array<ICart> {}
