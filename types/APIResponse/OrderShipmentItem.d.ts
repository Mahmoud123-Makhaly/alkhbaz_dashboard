import { IAddress } from './Address';
import { IOrderInPayment } from './OrderInPayment';
import { IOrderItem } from './OrderItem';
import { IProperties } from './Properties';

export interface IOrderShipmentLineItem extends IDefaultObj {
  lineItemId: string;
  lineItem: IOrderItem;
  barCode?: string;
  quantity: number;
  outerId?: string;
  status?: string;
}
export interface IOrderShipmentItem extends IDefaultObj {
  organizationId?: string;
  organizationName?: string;
  fulfillmentCenterId?: string;
  fulfillmentCenterName?: string;
  employeeId?: string;
  employeeName?: string;
  shipmentMethodCode?: string;
  shipmentMethodOption?: string;
  shippingMethod?: string;
  customerOrderId: string;
  customerOrder?: string;
  items: Array<IOrderShipmentLineItem>;
  packages: Array<any>;
  inPayments: Array<IOrderInPayment>;
  feeDetails: Array<any>;
  weightUnit?: string;
  weight?: number;
  measureUnit?: string;
  height?: number;
  length?: number;
  width?: number;
  discounts: Array<any>;
  deliveryAddress: IAddress;
  price: number;
  priceWithTax: number;
  total: number;
  totalWithTax: number;
  discountAmount: number;
  discountAmountWithTax: number;
  fee: number;
  feeWithTax: number;
  trackingNumber: string;
  trackingUrl?: string;
  deliveryDate: Date;
  objectType: string;
  vendorId?: string;
  taxType?: string;
  taxTotal: number;
  taxPercentRate: number;
  taxDetails: Array<any>;
  operationType: string;
  parentOperationId?: string;
  number: string;
  isApproved: boolean;
  status: string;
  comment?: string;
  currency: string;
  sum: number;
  outerId?: string;
  childrenOperations: Array<IOrderInPayment>;
  cancelledState: string;
  isCancelled: boolean;
  cancelledDate?: Date;
  cancelReason: string;
  dynamicProperties: Array<IProperties>;
  operationsLog?: string;
}
